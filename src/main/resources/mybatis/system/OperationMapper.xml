<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ifreework.mapper.system.OperationMapper">
	<sql id="operationColumns">
			OPERATION_ID,
			PK,
			OPERATION_NAME,
			REMARKS,
			OPERATION_TYPE,
			OPERATION_LEVEL
	</sql>

	<resultMap type="com.ifreework.entity.system.Operation" id="operation">
		<id column="OPERATION_ID" property="operationId"/>
		<result column="PK" property="pk"/>
		<result column="OPERATION_NAME" property="operationName"/>
		<result column="REMARKS" property="remarks"/>
		<result column="OPERATION_TYPE" property="operationType"/>
		<result column="OPERATION_LEVEL" property="operationLevel"/>
	</resultMap>
	
	<select id="queryPageList" parameterType="pd"
		resultMap="operation">
		select
		<include refid="operationColumns" />
		from  SYS_OPERATION  
		<where> 
			<if test=" pk != null and  pk != ''">
			    PK like '%${pk}%' 
			</if>
		</where>
		<foreach collection="columns" item="column" index="index"
            open="order by" close="" separator=",">
            <if test="column.orderable">
            	${column.name}   ${column.orderDir}
            </if>
        </foreach>

	</select>
	
	<select id="getOperationById" parameterType="string"
		resultMap="operation">
		select
		<include refid="operationColumns" />
		from  SYS_OPERATION  where OPERATION_ID = #{operationId}
	</select>
	
	<select id="getOperationByPK" parameterType="string"
		resultMap="operation">
		select
		<include refid="operationColumns" />
		from  SYS_OPERATION  where PK = #{pk}
	</select>
		
	<insert id="add" parameterType="com.ifreework.entity.system.Operation">
		<selectKey keyProperty="operationId" resultType="String" order="BEFORE">
			select  UUID()
		</selectKey>
		
		insert into SYS_OPERATION (<include refid="operationColumns"/>) 
		values 
		(
			#{ operationId,jdbcType=VARCHAR },
			#{ pk,jdbcType=VARCHAR },
			#{ operationName,jdbcType=VARCHAR },
			#{ remarks,jdbcType=VARCHAR },
			#{ operationType,jdbcType=VARCHAR },
			#{ operationLevel,jdbcType=VARCHAR }
		)
	</insert>
	
	<update id="update" parameterType="com.ifreework.entity.system.Operation">
		update  SYS_OPERATION
		<trim prefix="SET" suffixOverrides=",">  
	        <if test="pk != null ">  
	           PK = #{pk},
	        </if>  
	        <if test="operationName != null ">  
	           OPERATION_NAME = #{operationName},
	        </if>  
	        <if test="remarks != null ">  
	           REMARKS = #{remarks},
	        </if>  
	        <if test="operationType != null ">  
	           OPERATION_TYPE = #{operationType},
	        </if>  
	        <if test="operationLevel != null ">  
	           OPERATION_LEVEL = #{operationLevel},
	        </if>  
		</trim>
			where 
	        <if test="operationId != null ">  
	           OPERATION_ID = #{operationId}
	        </if>  
	</update>
	
	<!-- 删除节点时 -->
	<update id="delete" parameterType="string">
		delete from SYS_OPERATION
			where 
	           OPERATION_ID = #{operationId}
	</update>
	
</mapper>